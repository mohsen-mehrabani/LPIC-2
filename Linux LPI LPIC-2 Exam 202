Linux LPI LPIC-2 Exam 202

01. Introduction

02. DNS Server Options
  nslookup host dig dig @server site (without www)
  
  DNS
    1. djbdns 
         Daniel J Bernstein
         Abandonded in 2001
         Forked now
         used in Debian dbndns
         separate components tinydns
       
    2. powerdns
        modular
        front end
        vary
        back end varies
    3. dnsmasq
        small
        simple
        forwarder
        dns tftp dhcp
        
     BIND the importat dns for linux
     
03. Caching Nameserver with BIND
  1. Forwarding dns
  2. Caching DNS
  apt install bind9
  /etc/bind/
  /etc/bind/named.conf.options ---> add recursion yes; (It's necessary for running rndc and without that the named service won't run)
  
  
04. Creating and Maintaining DNS Zones with BIND 
  1. edit /etc/bind/named.conf.local  --> add zone & reverse zone
  2. create zones in /etc/bind/
    you can copy a db. file and rename it for both zone and reverse zones
    (Do Not Forget remane the serial)
    rndc reload for rloading the configurations
    test whith dig @localhost .... and dig @localhost -x .. for reverse dns
    

05. DNS Master and Slave with BIND
  1. /etc/bind/named.conf.local --->
    add:
          allow-transfer { salve's IP; };
          
  2. in salve:
          check the firewall to transfer the dns traffic (port 53)
          centos 6 --> system-config-firewall-tui(test user interface)
          centos 8 --> firewall has GUI & firewalld
          install bind
          /etc/named.conf -->
            listen-on port { any;}
            allow-query { any;}
            add zone whith slave type and masters { master's IP;}; file "zone db.file"
            start service named
            
            
06. Securing BIND Server

  /etc/bind/  -->
   1. dnssec-keygen -a(algorithm) HMAC-MD5 -b(size) size -n(name) name -r(randomdev) /dev/urandom keyname
       notes:
            RSASHA1 will be used by default
            HMAC keys must be between 1 and 512 bits.
            -n nametype
              Specifies the owner type of the key. The value of nametype must either be ZONE (for a DNSSEC zone key (KEY/DNSKEY)),
              HOST or ENTITY (for a key associated with a host (KEY)), USER (for a key associated with a user(KEY)) or OTHER (DNSKEY).
              These values are case insensitive. Defaults to ZONE for DNSKEY generation.
   2. It'll create 2 keys, Kkeyname.key & Kkeyname.private. Copy Key in .private for the next.
   3. create named.cong.tsig -->
        key "keyname" {
                        algorithm HMAC-MD5;
                        secret "the sercret key";
                        };
   4. add in named.conf --> include "/etc/bind/named.conf.tsig";
   5. named.conf.local --> edit allow-transfer { key "keyname"; };
   6. reload rndc

   On other server:
   1. centos: /etc/named.conf --> add
        key "keyname" {
            algorthm HMAC-MD5;
            secret "key";
            };
   2. server IP/hostname {
            key { keyname; };
            };
   3. service named restart

07.  Split DNS with BIND
  1. Edit /etc/bind/named.conf.local 
      add new zone
  2. Create new db. for the new zone
  3. rndc  restart
    It was really easy, I know
            
08. Running BIND in a Chroot Jail 
	In centos it is very easy 
		yum install bind-chroot
		/etc/sysconfig
		cat named
		/var/named/chroot
			
	In ubuntu you should configure it in APP Armor
		/etc/default/bind9 add -t /var/named/chroot to options
		mkdir -p /var/named/chroot
		go to the /var/named/chroot directory
		mkdir etc
		mkdir dev


09. Apache Web Server Installation and Setup 		
				
    package name 		redhat/centos		ubuntu/debian
          httpd			apache2
    config location	/etc/httpd/		/etc/apache2

  Ubuntu/Debian

    /etc/apache2/	apache2.conf	1.sites-enabled
            2.mods-enabled						

            1.sites-available
            2.mods-available

    httpd.conf		conf.d

    apt install apache2
      /var/www/html/index.html

  Cenos/Redhat

    yum install httpd
    default configuration file:/etc/httpd/conf/httpd.conf
    additional configuration files: /etc/httpd/conf.d
    /var/www/html/index.html which does not exist index.html by default

10. Apache Modules & Languages 

	For adding apache2's modules to ubuntu(php e.g.):
		apt-cache search php | grep apache
		find the pachage and install it
		apt-get install libapache2-mod-php5
		/etc/apache2/
		ls mods-available --> you'll find php5.conf & load 
		ls -l mods-available --> findig the symbolinc links


11. Apache MPM Module (Multi-Process Modules)
	1. Prefork (compatible, RAM consuming, needs for modules like PHP)
	2. Worker (use threads, each childs has its children, memory efficient)
	3. Event (newer, uses threads, handles different types of connections differently)
	
	configuration files:
		/etc/apache2/mods-enabled/
		  mpm_prefork.conf
	
	
12. Apache Authentication and Redirection
	separate from system auth 
	e.g. username=test pass=Aa123qwe
	1./etc/apache2/sites-enabled/000-default.conf -->
		<Directory "/var/www/html/secret">
			AuthType Basic
			AuthName "the user name is test"
			AuthUserFile /etc/apache2/testpass
			Require valid-user
		</Directory>
	2.apt-get install apache2-utils
	3.htpasswd -c /etc/apache2/testpass test 
		It'll create the testpass file
	4.apache2ctl restart or systemctl restart apache2
	5.prepare the index.html file in /var/www/html/secret and policy
	6./etc/apache2/sites-enabled/000-default.conf --> remove Directory -->
		Redirect /secret /policy

13. Apache Virtual Host Configuration
	1. Create an virtual IP --> ipconfig eth0:0 192.168.43.220
	2. Create two .conf files for IP and name
	3. Create their directories in /var/www/test1 & test2
	3. edit /etc/apache2/sites-available/000-default.conf as ip.conf and name.conf	
		ip.conf --> 
			1. <VirtualHost 192.168.43.220:80>
			2. ServerName test1
			3. DocumentRoot /var/www/test1

			
		name.conf-->
			1. ServerName test2
			2. DocumentRoot /var/www/test2
	
	4. For enabling these .conf files you can create two symbol links or
	    use a2ensite ip and a2ensite name
	5. if you cannot find the http://test2 add it is /etc/hosts
		
		
		
14. Apache SSL Setup
	ssl: secure socket layer  
	https: secure hyper text transfer protocol
	cert file types:
		1. Private key (never ever share private key)
		2. Signed Public key 
		3. CAS intermediate 	
	In ubuntu it is installed by default
	In centos:
		yum search apache | grep ssl
		mod_ssl.x86_64
		config file -->
			/etc/httpd/conf.d/ssl.conf
				**important notes**
					1.SSLEngine on
					2.SSLcertificateFile
					3.SSLCertificateKeyFile
					4.produce our key and replace int the path
						openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/httpd/myprivatekey.key
						 -out /etc/httpd/mypubliccert.crt
					5. replace the path of these files in nuber 3 & 4
					6. /var/www/html   --> index.html
					7. open the browser enjoy https://localhost
        

15. Squid Installation
	apt-get install squid3
		search for chace_mem
		search cache_dir
		retsart squid
		squid proxy port 3128 
		sudo wondershaper eth0 1024 1024 for creating bottleneck
		
  
16. Squid ACLs
	/etc/squid/squid.conf
	ACL Elements
	Access Lists


17. Squid Authentication
	
	** Auth_param basic program /apt/squid/ncsa /etc/squid/passwd **
	At the end of the TAG: auth_param in squid.conf add:
		auth_param basic program /usr/lib/squid3/basic_ncsa_auth /etc/squid/passwords
			you can find its location with locate command
		A the acl section add --> acl AUTHENTICATED proxy_auth REQUIRED
		Use this like an acl
		save the file
	htpasswd -c /etc/squid3(in my case squid)/passswords mypass ...
	restart squid

18. Nginx Installation and Configuration
	apt install nginx
	/etc/nginx/nginx.conf
	/usr/share/nginx/html by default 


19. Nginx Reverse Proxy
	look like Microsoft Threat Management Gateway (TMG)
	/etc/nginx/sites-available/--> vim search.local
		server {
			listen 80;
			server_name search.local;
			
			location / {
			proxy_pass http://www.msn.com;
			include /etc/nginx/proxy_params;
			}
			
		}
	
	/etc/nginx/sites-enabled -->
		ln -s ../sites-available/search.local .
	
	restart nginx

20. Samba Daemons
	Server Message Blocks SMB protocol
	NMBD Netbios Message Block Daemon
	SMBD Server message Block Daemon
	nmblookup NetBIOS over TCP/IP client used to lookup NetBIOS names
	
	
21. Samba Installation
	apt install samba
		/etc/samba
		vim /etc/samba/smb.conf
		at the end
			[folder name]
			path = /foder name
			guest ok = yes/no
			read only = yes/no
		mmkdir foldername
		make sure you have gotten appropriate permission
		smbstatus
		net status shares 
		/etc/samba/testparm
		

22. Samba Password Management
	/etc/smb.conf
		in global configuration / server string
			add netbios name = servername
			[data]
			path = /data
			valid users = asus
			read only = no
			create mask = 0777
			directory mask = 0777
		/#mkdir data	
		chmod 777 data
		smbpasswd -a (add) user
		


23. NFS  Network File System	

	version 3: rpcbind & portmapper, tcp/udp, needs mount daemon
	version 4: no rpcbind&portmapper, only tcp, does not need mount
	
	apt install nfs-kernel-server
	not starting nfs daemon because no exports
	vim /etc/exports
		/nfsdata 	*(rw)
			don't restart nfs daemon cause someone maybe is using file server
		exportfs -r (reread)
		mkdir /nfsdata
		chmod 777 /nfsdata
		exportfs -r 
		showmount -e(export) localhost

	on the other server
		mkdir /nfsdata
		chmod 777/nfsdata
		vim /etc/fstab
			192.168.43.120:/nfsdata nfsdata nfs defaults 0 0 
		mount /nfsdata
		touch test
	onte the first server
		cd /nfsdata
		ls -l 
		see the test1		
		


24. DHCP
	Dynamic Host Configuration Protocol
	ubuntu isc-dhcp-server (Internet Systema Consortium)
	centos dhcpd
	
	vim /etc/default/isc-dhcp-server
		INTERFACES="the Interface name you want"
	vim /etc/dhcp/dhcpd.conf
		option domain-name "name"
		option domain-name-servers ourdns;
		unncomment subnet range route and checge to your configuration
	restart the service
	/var/lib/dhcp/dhcpd.leases
	
	
	
25. DHCP Static Entries & Relay Hosts	
	for static dhcp:
		vim /etc/dhcp/dhcpd.conf
			host servername-static {
				hardware ethernet 00:00:00:00:00:00;
				fixed-addrress IP;
				}
		restart the service
		unplug&plug the netowrk
	
	for relay:
		we need two server and three seprate broadcast network
		One server as dhcp and the other as relay server
		There is need to define a route to transmit the dhcp rquest packages.
		
		on the dhcp server
			add another range to dhcpd.conf
				the first one was:
					subnet 10.10.10.0 netmask 255.255.255.0 {
						range 10.10.10.100 10.10.10.150;
						option routers 10.10.10.1;
					}
				the second one is:
					subnet 172.20.1.0 netmask 255.255.255.0 {
						range 172.20.1.100 172.20.1.150;
						option routers 172.20.1.1;
						}
			
			restart the service
			route add -net 172.20.1.0/24 gw 10.10.10.200 dev eth1 (example)
			route -n
			
			on hte first server:
				eth0 10.10.10.200
				eth1 172.20.1.4
			on the second server (relay) (E.g. centos)
				yum install dhcpd
				/etc/sysconfig/dhcprelay
					DHCPSERVERS="10.10.10.200"
			
			test on the 172.20.1 range systems:
				the machine got 172.20.1.100 
				
			on the dhcp server:
					cat /var/lib/dhcp/dhcpd.leases
					check for the tested machine record

26. PAM Configuration
	Plugable Authentication Password
		/etc/pam.conf
		service 	type 	control 	module-path 	module-arguments
		
			Service: This is the name of the application involved, for example: login, ssh or passwd.
			
			types:
				Account: Provide account verification types of service: has the user’s password expired? Is this user permitted 						 access to the requested service?
				Authentication: Establish if the user really is whom he claims to be. This can be done, for example, by asking a 							 password or,given the right module, by reading a chip-card or by performing a retinal or 							 fingerprint scan.
				Password: This group’s responsibility is the task of updating authentication mechanisms. Typically, such services 						  are strongly coupled to those of the authentication group. Some authentication mechanisms lend themselves 					  well to being updated.The user might be presented with a question like “Please enter the new password”.
				Session: This group of tasks covers things that should be done prior to a service being offered and after it is 						 withdrawn. Such tasks include the maintenance of audit trails and the mounting of the user’s home 						 directory.The session management group is important as it provides both an opening and closing hook for 						 modules that affect the services available to a user.
			
			Control: This field indicates what the PAM-API should do in case authentication fails for any module.
				 THE ARE FOUR VALID VALUES FOR THE CONTROL FIELD :
				 
				Requisite: Upon failure, the authentication process will be terminated immediately.
				Required: This will return failure after the remaining modules for this service and type have been invoked.
				Sufficient: Upon success, the authentication process will be satisfied, unless a prior required module has failed 						    the au-thentication.
				Optional: The success or failure of this module is only important if this is the only module associated with this 						  service and this type.
				
			Module-path: This is the filename, including the full path, of the PAM that is to be used by the application.
					examples: LDAP & Passwd

			Module-arguments: These are module specific arguments, separated by spaces, that are to be passed to the module. 

27. PAM Modules
	pam_cracklib.so 
		PAM module to check the password against dictionary words 
		Examples

			For an example of the use of this module, we show how it may be stacked with the password component of pam_unix(8)

			    #
			    # These lines stack two password type modules. In this example the
			    # user is given 3 opportunities to enter a strong password. The
			    # "use_authtok" argument ensures that the pam_unix module does not
			    # prompt for a password, but instead uses the one provided by
			    # pam_cracklib.
			    #
			    passwd  password required       pam_cracklib.so retry=3
			    passwd  password required       pam_unix.so use_authtok

			Another example (in the /etc/pam.d/passwd format) is for the case that you want to use md5 password encryption:

			    #%PAM-1.0
			    #
			    # These lines allow a md5 systems to support passwords of at least 14
			    # bytes with extra credit of 2 for digits and 2 for others the new
			    # password must have at least three bytes that are not present in the
			    # old password
			    #
			    password  required pam_cracklib.so \
					   difok=3 minlen=15 dcredit= 2 ocredit=2
			    password  required pam_unix.so use_authtok nullok md5

			And here is another example in case you don't want to use credits:

			    #%PAM-1.0
			    #
			    # These lines require the user to select a password with a minimum
			    # length of 8 and with at least 1 digit number, 1 upper case letter,
			    # and 1 other character
			    #
			    password  required pam_cracklib.so \
					   dcredit=-1 ucredit=-1 ocredit=-1 lcredit=0 minlen=8
			    password  required pam_unix.so use_authtok nullok md5


	pam_listfile.so
		deny or allow services based on an arbitrary file 
		Examples

			Classic 'ftpusers' authentication can be implemented with this entry in /etc/pam.d/ftpd:
			    #
			    # deny ftp-access to users listed in the /etc/ftpusers file
			    #
			    auth    required       pam_listfile.so \
				    onerr=succeed item=user sense=deny file=/etc/ftpusers

			Note, users listed in /etc/ftpusers file are (counterintuitively) not allowed access to the ftp service.

			To allow login access only for certain users, you can use a /etc/pam.d/login entry like this:
			    #
			    # permit login to users listed in /etc/loginusers
			    #
			    auth    required       pam_listfile.so \
				    onerr=fail item=user sense=allow file=/etc/loginusers

	pam_limits.so
		PAM module to limit resources 
		
		Examples

			For the services you need resources limits (login for example) put a the following line in /etc/pam.d/login as the last 				line for that service (usually after the pam_unix session line):

			    #%PAM-1.0
			    #
			    # Resource limits imposed on login sessions via pam_limits
			    #
			    session  required  pam_limits.so

			Replace "login" for each service you are using this module. 
	
	
	nsswitch.conf
		Name Service Switch configuration file
			https://www.man7.org/linux/man-pages/man5/nsswitch.conf.5.html
		
	
28. LDAP Server Installation
	Lightweight Directory Access Protocol.
	
	entry : A single unit within an LDAP directory. Each entry is identified by its unique Distinguished Name (DN).
	attributes: Information directly associated with an entry.
	LDIF: The LDAP Data Interchange Format (LDIF) is an ASCII text representation of LDAP entries. Files used for importing
		data to LDAP servers must be in LDIF format. An LDIF entry looks similar to the following example:
		[<id>]
		dn: <distinguished name>
		<attrtype>: <attrvalue>
		<attrtype>: <attrvalue>
		<attrtype>: <attrvalue>
	
	ldapsearch: is a shell-accessible interface to the ldap_search(3) library call. ldapsearch opens a connection to an LDAP server,
		    binds, and performs a search using specified parameters.
	ldappasswd: Change the password of an LDAP entry
		    ldappasswd is a tool to set the password of an LDAP user. ldappasswd uses the LDAPv3 Password Modify (RFC 3062) extended
		    operation.
	ldapadd: is implemented as a link to the ldapmodify tool. When invoked as ldapadd the -a (add new entry) flag is turned on
		  automatically.
	ldapdelete: is a shell-accessible interface to the ldap_delete_ext(3) library call.
		    opens a connection to an LDAP server, binds, and deletes one or more entries. If one or more DN arguments are
		    provided, entries with those Distinguished Names are deleted.
		    
	Ubuntu: apt install slapd ldap-utils
		dpkg-reconfigure slapd
		slapcat -b cn=config
		prepare a ldif file to add   
			https://www.digitalocean.com/community/tutorials/how-to-use-ldif-files-to-make-changes-to-an-openldap-system
			https://docs.oracle.com/cd/E10773_01/doc/oim.1014/e10531/ldif_appendix.htm
		stop slapd
		slapadd -l(ldif) name.ldif
		
	centos : yum install openldap openldap-servers openldad-clients
		/etc/ldap/openldap-->ldap.conf do't change anything
		vim slapd.conf
		
29. LDAP Client Tools
	examples:
		ldapsearch -h hostname -x(simple authentication) -b(base of search) dc=text,dc=com
		ldapsearch -h hostname -x(simple authentication) -D(who wants this information)  cn=admin,dc=test,dc=com -W(show passwords too) -b(base of search) dc=text,dc=com
			this will add what is inside the user.ldif to the ldap
		ldapadd -h hostname -x(simple authentication) -D(who wants this information) cn=admin,dc=test,dc=com -w password -f(file) user.ldif
			change the password of user
		ldappsswd -h hostname -x -D cn=admin,dc=test,dc=com -w passsword -S uid=user,ou=users,dc=test,dc=com
		--??> new password:....
			delete a user
		ldapdelete -h hostname -x -D cn=admin,dc=test,dc=com -W uid=user,ou=users,dc=test,dc=com
		--??> enter ldap password:....
		
		SSSD - System Security Services Daemon
		SSSD is a system daemon. Its primary function is to provide access to local or remote identity and authentication resources through a common 
			framework that can provide caching and offline support to the system. It provides several interfaces, including NSS and PAM modules or
			a D-Bus interface.
			
30. Postfix (Email) Server Config
	apt install postfix mailutils
		/etc/postfix/main.cf
		vim /etc/aliases --> root: user (this redirext root emails to user)
		sendmail
			postfix to sendmail compatibility interface
			important -bp show queue as well as mailq
			


31. Procmail for Local Email
	postfix default folder
		/var/spool/mail
	apt install procmail
	postconf --> showing all the postfix configurations
	postfong -e "configuration" no need to restart the service
	 
	Two ways  to configure procmail
		one: Global configuration
			create /etc/procmailrc -->
				MAILDIR=$HOME/mail
				DEFAULT=&HOME/mail/inbox
			restart the service
			mkdir $HOME/mail
			***makel rule** (named here recipe :-)     
		     vim .procmailrc -->
		     	:0:
		     	* ^Subject:.test
		     	testfile
		     	:wq
		     	this make a test file folder alongsilde ibox and put the emails including test in subjects to this folder
		     	you can make recipes with regular expressions


32. Remote Email Delivery
	1. Courier
		apt-cache search courier | grep courier
		choose the imap and pop only and install them
		/etc/courier
			imapd and pop3d
				imapd --> MAILDIRPATH=mail/inbox
				pop3d --> MAILDIRPATH=mail/inbox	
			restart both services
				
	2. Dovecot	
		apt-cache search dovecot
		apt-get install dovecot-imapd devoecot-pop3d
		accept self signed certificate
		/etc/deoecot.conf
		vim /etc/dovecot/conf.d/10-mail.conf --> 
			mail_location = maildir:~/mail/inbox
		restart voecot
		netstate -tuna | grep 100
		netstate -tuna | grep 143


33. NAT Routing
	chains:
				forward				postrouting
		prerouting	
				input  	(local machine) 	output
				
	policies: 1.accept	 2.drop	3.reject	4.log	5.masqurade
	
	every chain has a defult policy
	every chain has tables
	tables: 1.nat	2.filter 3.mangle
	
	echo "1">/proc/sys/net/ipv4/ip_forward
	iptables --table nat --append POSTROUTING --out-interface eth* -j MASQUERADE
	iptables --append FORWARD --in-interface eth* -j ACCEPT


